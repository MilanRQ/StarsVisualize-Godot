extends CharacterBody3D

# ----- Player nodes ----- 
@onready var head: Node3D = $Head

# ----- Variables ----- 
var current_speed = 5.0
const walking_speed = 5.0
const sprinting_speed = 8.0
const JUMP_VELOCITY = 4.5
const mouse_sens = 0.4

# ----- Ready_Function -----
func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

# ----- Input_Funktion (Move the Head) -----
func _input(event):
	if event is InputEventMouseMotion:
		rotate_y(deg_to_rad(-event.relative.x * mouse_sens))
		head.rotate_x(deg_to_rad(-event.relative.y * mouse_sens))
		head.rotation.x = clamp(head.rotation.x,deg_to_rad(-89),deg_to_rad(89))

# ----- Process_Funktion -----
func _physics_process(delta: float) -> void:
	
	# ----- Add the feature to sprint -----
	if Input.is_action_pressed("sprint"):
		current_speed = sprinting_speed
	else:
		current_speed = walking_speed
	
	# ----- Add's the gravity -----
	if not is_on_floor():
		velocity += get_gravity() * delta

	# ----- Add's the feature to Jump -----
	if Input.is_action_just_pressed("ui_accept") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# ----- to get the input direction and handle the movement/deceleration -----
	var input_dir := Input.get_vector("left", "right", "forward", "backward")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * current_speed
		velocity.z = direction.z * current_speed
	else:
		velocity.x = move_toward(velocity.x, 0, current_speed)
		velocity.z = move_toward(velocity.z, 0, current_speed)

	move_and_slide()